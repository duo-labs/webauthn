package webauthn

import (
	"github.com/duo-labs/webauthn/protocol"
)

type Credential struct {
	// A probabilistically-unique byte sequence identifying a public key credential source and its authentication assertions.
	ID []byte
	// The public key portion of a Relying Party-specific credential key pair, generated by an authenticator and returned to
	// a Relying Party at registration time (see also public key credential). The private key portion of the credential key
	// pair is known as the credential private key. Note that in the case of self attestation, the credential key pair is also
	// used as the attestation key pair, see self attestation for details.
	PublicKey []byte
	// The Authenticator information for a given certificate
	Authenticator Authenticator
}

func MakeNewCredential(c *protocol.ParsedCredentialCreationData) (*Credential, error) {

	newCredential := &Credential{
		ID:        c.Response.AttestationObject.AuthData.AttData.CredentialID,
		PublicKey: c.Response.AttestationObject.AuthData.AttData.CredentialPublicKey,
		Authenticator: Authenticator{
			AAGUID:    c.Response.AttestationObject.AuthData.AttData.AAGUID,
			SignCount: c.Response.AttestationObject.AuthData.Counter,
		},
	}

	return newCredential, nil
}
